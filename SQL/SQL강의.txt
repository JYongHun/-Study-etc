DBMS의 개념과 간단한 SQL문
	용어-     Data (자료)(행)
		Column(열)
		Table(데이터를 표 형식으로 표현)
		Database(테이블을 저장하는 저장 공간 또는 테이블의 집합)
		DBMS(DataBase Management System) 데이터베이스를 관리하는 소프트웨어
		Record or Row (테이블의 행)
		Field or Column (테이블의 열)
		Data Type (필드에 입력할 값의 타입)
		Field name (각 필드(열)의 이름)
		PrimaryKey Field (레코드를 식별하는 유일한 값을 갖고 비어있지 않은 필드
		Foreign Key Field (다른 테이블 주 키와 대응되는 필드
		RDBMS(Relational DBMS)관계형 DBMS
		SQL(Structured Query Language)'구조화된 질의 언어'란 의미로 DB에서 정보를 얻거나,
					      생성하거나, 갱신하려고 정의한 표준 언어(규약)

SQL (structured query language)
	
	use  해당 DataBase 안으로 이동하는것
	(.) 해당 Database 위치말고 다른 위치의 Database를 갈때는 경로를(.) 다 적어줘야함
	from 옆의 . 은 데이터 베이스를 가르킴  join . 은 다름 구별 잘할것
	ex) 데이타베이스 명 . 테이블 명  "Data"  한글로 쓰지말자   data는 대소문자 구분함
	실체가있는것이 Table, Table Column(열) Data(행)
	Table의 구조를  SCHEMAS 고 부름
	db  사진, 동영상은 db에 저장하지않고 파일 시스템에 저장한다.(aws a3에 많이 저장함,firebase구글)
	
Datatypes
	적은거 위주로 씀 많음
	Numeric Types : INT DOUBLE FLOAT  decimal(2,1)..........
	String Types : CHAR  VARCHAR  ........... (String은 문자갯수를 지정해야함)
	Date Types : date("YYYY-MM-DD),time,datetime,tiemstamp  ........ 

CRUD  C : Create  R : Read U : Update D : Delete
C : Create
	Table                               
	Columns + Data , Table 설계할때는 Column 간의 연결고리를 잘 만들어 야함
	Table의 설정 변경 : 변경할 테이블명 마우스 오른쪽 Alter table.
	
-NULL	값이없다, 0 이다 라는것과는 다른것이다, 공백 과도 다른것이다.

-NOT NULL
	null 이 나오면 안된다.(값을 넣어라) Ex) columnName datatype not null 

-Default : 입력을 안하면 그값을 설정해주는 방법  Ex)columnName datatype default value

-Primary Key  : 동일한 데이터를 구분하는 방법. 테이터 중복없이 유니크하게 처리하자.
	
-AUTO_INCREMENT 
	auto_increment 자동으로 증가하라 (not null 과 같이써라)
	
-foreign key 
	foreign key(column) references 연결할column(key) 
	on delete cascade 연결된 id를 지우면 연결한 같은 값의 데이터도 삭제된다.
	primary key 값이 입력 안됬다면 foreign key에 해당하는 데이터가 입력오류가남

	on delete cascade 
	foreign 된 데이터가 삭제되면 연결된 데이터도 삭제됨
	
INSERT INTO 
	insert into column naem() VALUES( )  데이터를 집어넣는 명령어
	ex)insert into Table values (DEFAULT, "Gimpo","KOR","Kyonggi",359584);
	Table column의 수를 파악하고 그 column value 에맞는 Data를 입력한다
	
	Ex) insert into column (name, age)            insert 값 여러개 넣을때
		    values('Charlie',10);
		
		
	
	

R : Read

SELECT
	-select 옆은 화면에 표시하는걸 나타냄 , 읽는 순서는 from -> where, order by... -> select
	
	-select function()
	  count( ) or || , min (column name), max (), sum (), avg() average약자, lower(),upper(),concat()
	  ifnull(), reverse(), char_length() , round()
	  concat_ws(내가 연결사이마다 똑같이 쓸때 ,  columnName)
	  substring(String, index, 갯수)
		index의 값에 문자열의 오른쪽 일부분을 가져오는 함수 (SQL index는 1부터 시작  자바와 혼동 주의)
		표시는 해당 문자열의 끝 , 갯수가없음 끝까지
	  replace() : 문자열에서 원하는 문자열을 바꾼다. Ex) select replace(String, "대상문자", "바뀔문자") 

	

Conditional(조건문)   and &&    
		between v1 and v2사이 모든값 , not between 도됨
		or  비슷 in(value.... ),not in (value....)


	-where   조건문을 쓸수있음  where not   
		NULL 값을 찾을떄는 is NULL을 해야함
			 
	- case statements
		조건문 else가 없어도 됨   when 이 Java 의 if else if 와같음
		Ex) case when column operator value then "value1" else "value2" end as columnName

	
	-if 문    if( count(j.rating) > 0 , "ACTIVE","INACTIVE") as status  
		중첩은 if문이 복잡해지기 때문에 case문으로 쓰는걸 권장 
		조건이 하나일땐 if문이 단순해서 쉬움  헷갈리면 하나만 써라
		
	-like      부분적으로 일치하는 것을 찾을때 사용함
		%가 정해주지않음이라는 뜻  _ 앞의글자에 따라정해줌
		"A%" , "%A%" , "%A", "A_" A로시작하는 두글자
		not like도가능
		 _ 의미하는건 자리수 (  _ 갯수만큼 자리수를 물어봄 )  
		기호는 기호를 써야함(공백이있음 한칸 띄고)
		like , = (not like not equls !=) 의 차이  포함과 그값만 찾는차이

	-orber by  (asc or desc),    order by CN , CN2   여러개 할떄  먼저나온 정렬하고 다음값이 안에서 정렬

	-group by 
		컬럼만 적용됨   조건식있을땐 where 다음에 와야함
		having() = 1; 1의값인 걸 가져와라, having은 항상 group by 랑 같이나온다

	limit       Ex) select * from table limit x, y;    limit,offset     -> limit 3,10 : 3은 offset,10은 갯수
		from뒤에 내가원하는 위치에서 갯수를 제한하여 가져올 수 있음
		(offset 을 안적고 갯수를 가져오면 처음부터 가져옴)

	-as        column change naming  as 휘발성   공백이있의면 "" 묶어줘야함
		as : column name  as  change     as 는  원본을 건드리지않고 휘발함  as선언한 한문장에서만 써짐
		as 를 사용하여 Table명칭 축소해서 사용 많이함	
		select 문 안에서는 중복 사용 불가 다른곳은 어디서든 사용 가능

	-join on  여러개의 테이블을 하나로 합치는것. 연결고리를 찾아라   
		Ex)select print from Table1 as T1 join Talbe2 as T2 on T1.column = T2.column
		복수의 Table을 공통점(column)을 찾아서 연결한것, Table이 두개 이상일때는, *을 쓰지말고 해당 테이블명.*
		join 연결할 Table  on  공통된 column 
		where Table.column = Table2.column2  where 로 하면 같지만 구별이 어려워서 안씀 
		join 할떄 on 에서 Data 매칭되는게 없의면 누락시키고 실행함

	left join :  left (left join 왼쪽)에 들어간 column Data를 모두다 조인하라는 뜻  (left outer join)
		원하는 Data 의 Column을 대상으로 선택해야됨 left join 대상을 잘 선택해야함 
	
	- destinct 중복제거 select   

	- casting 가능  cast( as) Ex)cast("1990-01-01" as datetime)  datatype 변환 cast 는 as를씀 기억해둬야함

U : Update
	ex) update Table set column name = " " where  .......
	Update 할때 해당행을 찾아서 모든 column 이름을 써줘야함 (중요!!!!!!!!!!)
	하지만 id값이나등등의 Table 에서 유니크한 값만 가지고 있다면 경로를 그 하나의 값만 입력해도됨
	update 할 대상을 확실히 명시할수 있는 경로를 쓰는것 경로를 확인하는습관이 중요
	중복 변경할때 대상이 공통으로 들어있는 column을 찾아서 하면됨 항상 경로가 중요

D : Delete
	ex)delete from Table where Column name = data;
	update 와 동일하게 where 를 잘써야함 안그럼 다지워짐
	경로를 확인후 하자

	Tip) update  safe mode 해제 
	옵션 해제 안하고 하는법 where  primraykey > 0 ;
	

max,min 의 제목함정   해결방법 : subquery or order by limit

subquery 서브쿼리를 괄호로 감싸야함, 서브쿼리는 단일 행 또는 복수 행 비교 연산자와 함께 사용 가능
	서브쿼리에서는 order by 사용안됨
 	Ex) subquery  from table where column Operator( select * function from table);

-date 	reference확인해라.
	curdate(), curtime(), now(), datediff(), dateadd()
	day(),  dayname(), month(), year(), hour(), minute(), second().......
-datetime 
	을쓸땐 date 나 time만 써도됨
	단 정확한 값이 안나올수 있기때문에 컬럼에 값을 casting해서 사용하는게 좋음
	컬럼에 값을 지정해주면 그것만 쓸수도 있음 Ex) time(column)

-timestamp
	datetype	timestamp default now() on update current_timestamp
	on update current_timestamp